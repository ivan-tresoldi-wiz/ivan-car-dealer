name: Build and Push Docker Image

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
      WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run Gulp build
        run: npm run build

      - name: Build and push latest Docker image
        env:
          REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          REPOSITORY: "ivan-car-dealer"
          COMMIT_SHA: ${{ github.sha }}
        run: |
          cd dist
          IMAGE_TAG=$REGISTRY/$REPOSITORY:latest
          echo "Building Docker image with tag $IMAGE_TAG"
          docker build -t $IMAGE_TAG .

      - name: Download Wiz CLI
        run: curl -o wizcli https://wizcli.app.wiz.io/latest/wizcli && chmod +x wizcli

      - name: Authenticate to Wiz
        run: sudo -E ./wizcli auth

      - name: Run Wiz CLI image scan
        id: scan
        run: sudo -E ./wizcli docker scan -i $REGISTRY/$REPOSITORY:latest --policy ivan-tresoldi-vulnerabilities
        continue-on-error: false
        env:
          REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          REPOSITORY: "ivan-car-dealer"
          COMMIT_SHA: ${{ github.sha }}
          
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHub-Actions-Role
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
    

      - name: Push the tagged Docker image to Amazon ECR
        env:
          REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          REPOSITORY: "ivan-car-dealer"
          COMMIT_SHA: ${{ github.sha }}
        run: |
          cd dist
          IMAGE_TAG=$REGISTRY/$REPOSITORY:latest
          docker push $IMAGE_TAG

      - name: Verify Docker image
        env:
          REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          REPOSITORY: "ivan-car-dealer"
          COMMIT_SHA: ${{ github.sha }}
        run: |
          REPOSITORY_URI=$REGISTRY/$REPOSITORY
          IMAGE_TAG=$REPOSITORY_URI:latest
          echo "Pulling Docker image with URI: $IMAGE_TAG"
          docker pull $IMAGE_TAG
      
      - name: Run Wiz CLI image tag
        env:
          ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: "us-east-1"
          REPOSITORY: "ivan-car-dealer"
          COMMIT_SHA: ${{ github.sha }}
        run: |
          IMAGE_URI=$ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$REPOSITORY:latest
          sudo -E ./wizcli docker tag -i $IMAGE_URI
